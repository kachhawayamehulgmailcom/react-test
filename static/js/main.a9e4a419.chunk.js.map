{"version":3,"sources":["serviceWorker.js","theme/palette.js","theme/typography.js","theme/overrides/MuiIconButton.js","theme/overrides/MuiTableCell.js","theme/overrides/index.js","theme/overrides/MuiButton.js","theme/overrides/MuiPaper.js","theme/overrides/MuiTableHead.js","theme/overrides/MuiTypography.js","theme/index.js","components/RouteWithLayout/RouteWithLayout.js","components/Snackbar/Snackbars.js","components/Dialog/components/DialogContent/DialogContent.js","components/Dialog/components/DialogFooter/DialogFooter.js","components/Dialog/components/DialogHeader/DialogHeader.js","components/Dialog/Dialog.js","layouts/Main/components/Footer/Footer.js","layouts/Main/components/Sidebar/components/SidebarNav/SidebarNav.js","layouts/Main/components/Sidebar/Sidebar.js","layouts/Main/components/Topbar/Topbar.js","layouts/Main/Main.js","privateRouter/PrivateRoute.js","views/NotFound/NotFound.js","core/global/util.js","core/handel-error/ErrorBoundary.js","core/validator/Validator.js","views/User/components/AddEditUser/AddEditUser.js","views/User/components/UsersTable/UsersTable.js","components/TimeFormet/TimeFormat.js","views/User/User.js","Routes.js","App.js","index.js"],"names":["Boolean","window","location","hostname","match","white","black","primary","contrastText","dark","colors","indigo","main","light","secondary","blue","success","green","info","warning","orange","error","red","text","blueGrey","link","background","default","paper","icon","divider","grey","h1","color","palette","fontWeight","fontSize","letterSpacing","lineHeight","h2","h3","h4","h5","h6","subtitle1","subtitle2","body1","body2","button","caption","overline","textTransform","root","backgroundColor","MuiButton","contained","boxShadow","MuiIconButton","MuiPaper","elevation1","MuiTableCell","typography","borderBottom","MuiTableHead","MuiTypography","gutterBottom","marginBottom","theme","createMuiTheme","overrides","zIndex","appBar","drawer","RouteWithLayout","props","Layout","layout","Component","component","rest","render","matchProps","TransitionRight","Slide","direction","SnackBar","state","this","classes","open","variant","message","confirm","Snackbar","anchorOrigin","vertical","horizontal","TransitionComponent","onClose","alertClose","SnackbarContent","className","aria-describedby","action","Button","onClick","onDelete","key","size","IconButton","aria-label","withStyles","close","padding","spacing","amber","DialogBody","margin","closeButton","position","right","top","children","DialogContent","dividers","DialogFooter","DialogActions","DialogHeader","disableTypography","Typography","CustomDialog","Dialog","aria-labelledby","maxWidth","fullWidth","id","handleClose","dialogHeaderText","dialogBody","dialogFooter","withRouter","useStyles","makeStyles","Footer","clsx","Link","target","item","display","paddingTop","paddingBottom","justifyContent","width","fontWeightMedium","height","alignItems","marginRight","active","CustomRouterLink","forwardRef","ref","style","flexGrow","SidebarNav","pages","List","map","page","ListItem","disableGutters","title","activeClassName","to","href","breakpoints","up","marginTop","flexDirection","nav","Sidebar","adminPages","FitnessCenter","Drawer","anchor","signOutButton","marginLeft","Topbar","onSidebarOpen","React","useState","Fragment","AppBar","Toolbar","shiftContent","paddingLeft","content","Main","useTheme","isDesktop","useMediaQuery","defaultMatches","openSidebar","setOpenSidebar","shouldOpenSidebar","countries","studentList","studentId","images","fName","lName","fatherName","email","address","mobile","gender","dob","countryId","PrivateRoute","createUserSucess","data","push","textAlign","image","NotFound","Grid","container","justify","lg","xs","alt","src","getIndexOfArrayData","property","value","result","some","i","ErrorBoundary","errorInfo","setState","whiteSpace","toString","componentStack","validateEmail","RegExp","test","String","toLowerCase","validateContact","c","replace","AddEditUser","componentDidMount","selectRoleLabelWidth","selectCountryDDRef","current","offsetWidth","userUpdateInfo","values","updateUser","console","log","payload","length","updateSuccess","handleChange","event","type","isValid","isEmail","name","touched","errors","handlePhoneCountryCodeClick","hasError","phoneCountryCode","handlePhoneCountryCodeChange","handleChangeOnmobile","isPhoneNumberValid","createUser","preventDefault","alert","handleChangeMultiple","onImageChange","files","reader","FileReader","onload","e","_images","readAsDataURL","onImageRemove","index","splice","createRef","isUpdateButton","Date","password","loading","form","onSubmit","autoComplete","md","TextField","textField","helperText","label","onChange","required","multiline","rows","FormLabel","RadioGroup","FormControlLabel","control","Radio","InputLabelProps","shrink","FormControl","formControl","InputLabel","htmlFor","Select","labelWidth","inputProps","MenuItem","img","borderRadius","uploadButton","accept","signInButton","isEditUser","create","disabled","paddingRight","flexBasis","down","chip","chips","flexWrap","minWidth","UsersTable","messsage","openDialog","isData","filterData","company","typesOfTrainingsHeParticipated","training","category","dialogHeader","isDialogOpen","forShow","handleCloseAddUserDialog","userUpdatedData","userUpdateSuccess","returnCountry","_index","newRow","dialogName","isComponent","companyList","activeSortName","users","count","pagination","Card","CardContent","inner","Table","TableHead","TableRow","TableCell","TableBody","user","tableRow","nameContainer","date","moment","format","Edit","avatar","actions","actionButton","UserLayout","userList","_userList","Routes","exact","from","MainLayout","path","UserView","NotFoundView","browserHistory","createBrowserHistory","App","ThemeProvider","history","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.a9e4a419.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { colors } from '@material-ui/core';\n\nconst white = '#FFFFFF';\nconst black = '#000000';\n\nexport default {\n  black,\n  white,\n  primary: {\n    contrastText: white,\n    dark: colors.indigo[900],\n    main: '#59529F',\n    light: colors.indigo[100]\n  },\n  secondary: {\n    contrastText: white,\n    dark: colors.blue[900],\n    main: colors.blue['A400'],\n    light: colors.blue['A400']\n  },\n  success: {\n    contrastText: white,\n    dark: colors.green[900],\n    main: colors.green[600],\n    light: colors.green[400]\n  },\n  info: {\n    contrastText: white,\n    dark: colors.blue[900],\n    main: colors.blue[600],\n    light: colors.blue[400]\n  },\n  warning: {\n    contrastText: white,\n    dark: colors.orange[900],\n    main: colors.orange[600],\n    light: colors.orange[400]\n  },\n  error: {\n    contrastText: white,\n    dark: colors.red[900],\n    main: colors.red[600],\n    light: colors.red[400]\n  },\n  text: {\n    primary: colors.blueGrey[900],\n    secondary: colors.blueGrey[600],\n    link: colors.blue[600]\n  },\n  background: {\n    default: '#F4F6F8',\n    paper: white\n  },\n  icon: colors.blueGrey[600],\n  divider: colors.grey[200]\n};\n","import palette from './palette';\n\nexport default {\n  h1: {\n    color: palette.text.primary,\n    fontWeight: 500,\n    fontSize: '35px',\n    letterSpacing: '-0.24px',\n    lineHeight: '40px'\n  },\n  h2: {\n    color: palette.text.primary,\n    fontWeight: 500,\n    fontSize: '29px',\n    letterSpacing: '-0.24px',\n    lineHeight: '32px'\n  },\n  h3: {\n    color: palette.text.primary,\n    fontWeight: 500,\n    fontSize: '24px',\n    letterSpacing: '-0.06px',\n    lineHeight: '28px'\n  },\n  h4: {\n    color: palette.text.primary,\n    fontWeight: 500,\n    fontSize: '20px',\n    letterSpacing: '-0.06px',\n    lineHeight: '24px'\n  },\n  h5: {\n    color: palette.text.primary,\n    fontWeight: 500,\n    fontSize: '16px',\n    letterSpacing: '-0.05px',\n    lineHeight: '20px'\n  },\n  h6: {\n    color: palette.text.primary,\n    fontWeight: 500,\n    fontSize: '14px',\n    letterSpacing: '-0.05px',\n    lineHeight: '20px'\n  },\n  subtitle1: {\n    color: palette.text.primary,\n    fontSize: '16px',\n    letterSpacing: '-0.05px',\n    lineHeight: '25px'\n  },\n  subtitle2: {\n    color: palette.text.secondary,\n    fontWeight: 400,\n    fontSize: '14px',\n    letterSpacing: '-0.05px',\n    lineHeight: '21px'\n  },\n  body1: {\n    color: palette.text.primary,\n    fontSize: '14px',\n    letterSpacing: '-0.05px',\n    lineHeight: '21px'\n  },\n  body2: {\n    color: palette.text.secondary,\n    fontSize: '12px',\n    letterSpacing: '-0.04px',\n    lineHeight: '18px'\n  },\n  button: {\n    color: palette.text.primary,\n    fontSize: '14px'\n  },\n  caption: {\n    color: palette.text.secondary,\n    fontSize: '11px',\n    letterSpacing: '0.33px',\n    lineHeight: '13px'\n  },\n  overline: {\n    color: palette.text.secondary,\n    fontSize: '11px',\n    fontWeight: 500,\n    letterSpacing: '0.33px',\n    lineHeight: '13px',\n    textTransform: 'uppercase'\n  }\n};\n","import palette from '../palette';\n\nexport default {\n  root: {\n    color: palette.icon,\n    '&:hover': {\n      backgroundColor: 'rgba(0, 0, 0, 0.03)'\n    }\n  }\n};\n","import palette from '../palette';\nimport typography from '../typography';\n\nexport default {\n  root: {\n    ...typography.body1,\n    borderBottom: `1px solid ${palette.divider}`\n  }\n};\n","import MuiButton from './MuiButton';\nimport MuiIconButton from './MuiIconButton';\nimport MuiPaper from './MuiPaper';\nimport MuiTableCell from './MuiTableCell';\nimport MuiTableHead from './MuiTableHead';\nimport MuiTypography from './MuiTypography';\n\nexport default {\n  MuiButton,\n  MuiIconButton,\n  MuiPaper,\n  MuiTableCell,\n  MuiTableHead,\n  MuiTypography\n};\n","export default {\n  contained: {\n    boxShadow:\n      '0 1px 1px 0 rgba(0,0,0,0.14), 0 2px 1px -1px rgba(0,0,0,0.12), 0 1px 3px 0 rgba(0,0,0,0.20)',\n    backgroundColor: '#FFFFFF'\n  }\n};\n","export default {\n  elevation1: {\n    boxShadow: '0 0 0 1px rgba(63,63,68,0.05), 0 1px 3px 0 rgba(63,63,68,0.15)'\n  }\n};\n","import { colors } from '@material-ui/core';\n\nexport default {\n  root: {\n    backgroundColor: colors.grey[50]\n  }\n};\n","export default {\n  gutterBottom: {\n    marginBottom: 8\n  }\n};\n","import { createMuiTheme } from '@material-ui/core';\n\nimport palette from './palette';\nimport typography from './typography';\nimport overrides from './overrides';\n\nconst theme = createMuiTheme({\n  palette,\n  typography,\n  overrides,\n  zIndex: {\n    appBar: 1200,\n    drawer: 1100\n  }\n});\n\nexport default theme;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Route } from 'react-router-dom';\n\nconst RouteWithLayout = props => {\n    const { layout: Layout, component: Component, ...rest } = props;\n\n    return (\n        <Route\n            {...rest}\n            render={matchProps =>\n                <Layout>\n                    <Component {...matchProps} />\n                </Layout>\n            }\n        />\n    );\n};\n\nRouteWithLayout.propTypes = {\n    component: PropTypes.any.isRequired,\n    layout: PropTypes.any.isRequired,\n    path: PropTypes.string\n};\n\nexport default RouteWithLayout;\n","import React, { Component } from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport {\n  IconButton,\n  Button,\n  Snackbar,\n  SnackbarContent,\n  Slide\n} from '@material-ui/core';\nimport CloseIcon from '@material-ui/icons/Close';\nimport { green, amber } from '@material-ui/core/colors';\n\nfunction TransitionRight(props) {\n  return <Slide {...props} direction=\"left\" />;\n}\n\nconst useStyles = theme => ({\n  close: {\n    padding: theme.spacing(0.5)\n  },\n  success: {\n    backgroundColor: green[600]\n  },\n  error: {\n    backgroundColor: theme.palette.error.dark\n  },\n  warning: {\n    backgroundColor: amber[700]\n  },\n  message: {},\n  icon: {}\n});\n\nclass SnackBar extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  render() {\n    const { classes, open, variant, message, confirm } = this.props;\n    return (\n      <Snackbar\n        anchorOrigin={{\n          vertical: 'top',\n          horizontal: 'right'\n        }}\n        open={open}\n        TransitionComponent={TransitionRight}\n        // autoHideDuration={10000}\n        onClose={() => this.props.alertClose()}>\n        <SnackbarContent\n          className={classes[variant]}\n          aria-describedby=\"client-snackbar\"\n          message={\n            // <span id=\"client-snackbar\" className={classes.message}>\n            message\n            // </span>\n          }\n          action={[\n            confirm && (\n              <Button\n                onClick={() => this.props.onDelete()}\n                key=\"delete\"\n                color=\"secondary\"\n                size=\"small\">\n                confirm\n              </Button>\n            ),\n            <IconButton\n              key=\"close\"\n              aria-label=\"close\"\n              color=\"inherit\"\n              onClick={() => this.props.alertClose()}>\n              <CloseIcon className={classes.icon} />\n            </IconButton>\n          ]}\n        />\n      </Snackbar>\n    );\n  }\n}\n\nexport default withStyles(useStyles)(SnackBar);\n","import React from 'react';\n\nimport { withStyles } from '@material-ui/core/styles';\n\nimport { DialogContent } from '@material-ui/core';\n\n// const DialogContent = withStyles(theme => ({\n//     root: {\n//         padding: theme.spacing(2),\n//     },\n// }))(MuiDialogContent);\nconst styles = theme => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(2)\n  },\n  closeButton: {\n    position: 'absolute',\n    right: theme.spacing(1),\n    top: theme.spacing(1),\n    color: theme.palette.grey[500]\n  }\n});\nexport const DialogBody = withStyles(styles)(props => {\n  const { children } = props;\n  return <DialogContent dividers>{children}</DialogContent>;\n});\n","import React from 'react';\n\nimport { withStyles } from '@material-ui/core/styles';\n\nimport { DialogActions } from '@material-ui/core';\nconst styles = theme => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(2)\n  },\n  closeButton: {\n    position: 'absolute',\n    right: theme.spacing(1),\n    top: theme.spacing(1),\n    color: theme.palette.grey[500]\n  }\n});\n// const DialogActions = withStyles(theme => ({\n//     root: {\n//         margin: 0,\n//         padding: theme.spacing(1),\n//     },\n// }))(MuiDialogActions);\nexport const DialogFooter = withStyles(styles)(props => {\n  const { children } = props;\n  return <DialogActions>{children}</DialogActions>;\n});\n","import React from 'react';\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport { withStyles } from '@material-ui/core/styles';\nimport CloseIcon from '@material-ui/icons/Close';\n\nconst styles = theme => ({\n    root: {\n      margin: 0,\n      padding: theme.spacing(2),\n    },\n    closeButton: {\n      position: 'absolute',\n      right: theme.spacing(1),\n      top: theme.spacing(1),\n      color: theme.palette.grey[500],\n    },\n  });\nexport const DialogHeader = withStyles(styles)(props => {\n  const { children, classes, onClose } = props;\n  return (\n    <MuiDialogTitle disableTypography className={classes.root}>\n      <Typography variant=\"h6\">{children}</Typography>\n      {onClose ? (\n        <IconButton aria-label=\"close\" className={classes.closeButton} onClick={onClose}>\n          <CloseIcon />\n        </IconButton>\n      ) : null}\n    </MuiDialogTitle>\n  );\n});","import React, { Component, Fragment } from 'react';\nimport { Dialog } from '@material-ui/core';\nimport { withStyles } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport { withRouter } from 'react-router-dom';\nimport { DialogBody } from './components/DialogContent/DialogContent';\nimport { DialogFooter } from './components/DialogFooter/DialogFooter';\nimport { DialogHeader } from './components/DialogHeader/DialogHeader';\nconst useStyles = theme => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(2)\n  },\n  closeButton: {\n    position: 'absolute',\n    right: theme.spacing(1),\n    top: theme.spacing(1),\n    color: theme.palette.grey[500]\n  }\n});\nclass CustomDialog extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { open: false };\n  }\n\n  render() {\n    return (\n      <Fragment>\n        <Dialog\n          // onClose={this.props.handleClose}\n          aria-labelledby=\"customized-dialog-title\"\n          open={this.props.open}\n          maxWidth={this.props.maxWidth}\n          fullWidth>\n          <DialogHeader\n            id=\"customized-dialog-title\"\n            onClose={this.props.handleClose}>\n            {this.props.dialogHeaderText}\n          </DialogHeader>\n          <DialogBody>{this.props.dialogBody}</DialogBody>\n          {this.props.dialogFooter && (\n            <DialogFooter>{this.props.dialogFooter}</DialogFooter>\n          )}\n        </Dialog>\n      </Fragment>\n    );\n  }\n}\n\nCustomDialog.propTypes = {\n  history: PropTypes.object\n};\n\nexport default withRouter(withStyles(useStyles)(CustomDialog));\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { Typography, Link } from '@material-ui/core';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    padding: theme.spacing(4)\n  }\n}));\n\nconst Footer = props => {\n  const { className, ...rest } = props;\n\n  const classes = useStyles();\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <Typography variant=\"body1\">\n        &copy;{' '}\n        <Link\n          component=\"a\"\n          target=\"_blank\"\n        >\n          Mehul\n        </Link>\n        . 2020\n      </Typography>\n      <Typography variant=\"caption\">\n        Created with love for the environment. By designers and developers who\n        love to work together in offices!\n      </Typography>\n    </div>\n  );\n};\n\nFooter.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Footer;\n","/* eslint-disable react/no-multi-comp */\n/* eslint-disable react/display-name */\nimport React, { forwardRef } from 'react';\nimport { NavLink as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/styles';\nimport { List, ListItem, Button, colors } from '@material-ui/core';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  item: {\n    display: 'flex',\n    paddingTop: 0,\n    paddingBottom: 0\n  },\n  button: {\n    color: colors.blueGrey[800],\n    padding: '10px 8px',\n    justifyContent: 'flex-start',\n    textTransform: 'none',\n    letterSpacing: 0,\n    width: '100%',\n    fontWeight: theme.typography.fontWeightMedium\n  },\n  icon: {\n    color: theme.palette.icon,\n    width: 24,\n    height: 24,\n    display: 'flex',\n    alignItems: 'center',\n    marginRight: theme.spacing(1)\n  },\n  active: {\n    color: theme.palette.primary.main,\n    fontWeight: theme.typography.fontWeightMedium,\n    '& $icon': {\n      color: theme.palette.primary.main\n    }\n  }\n}));\n\nconst CustomRouterLink = forwardRef((props, ref) => (\n  <div ref={ref} style={{ flexGrow: 1 }}>\n    <RouterLink {...props} />\n  </div>\n));\n\nconst SidebarNav = props => {\n  const { pages, className, ...rest } = props;\n\n  const classes = useStyles();\n\n  return (\n    <List {...rest} className={clsx(classes.root, className)}>\n      {pages.map(page => (\n        <ListItem className={classes.item} disableGutters key={page.title}>\n          <Button\n            activeClassName={classes.active}\n            className={classes.button}\n            component={CustomRouterLink}\n            to={page.href}>\n            <div className={classes.icon}>{page.icon}</div>\n            {page.title}\n          </Button>\n        </ListItem>\n      ))}\n    </List>\n  );\n};\n\nSidebarNav.propTypes = {\n  className: PropTypes.string,\n  pages: PropTypes.array.isRequired\n};\n\nexport default SidebarNav;\n","import React from 'react';\nimport clsx from 'clsx';\nimport { Drawer } from '@material-ui/core';\nimport { FitnessCenter } from '@material-ui/icons';\nimport PeopleIcon from '@material-ui/icons/People';\nimport { makeStyles } from '@material-ui/styles';\nimport PropTypes from 'prop-types';\nimport { SidebarNav } from './components';\n\nconst useStyles = makeStyles(theme => ({\n    drawer: {\n        width: 240,\n        [theme.breakpoints.up('lg')]: {\n            marginTop: 64,\n            height: 'calc(100% - 64px)'\n        }\n    },\n    root: {\n        backgroundColor: theme.palette.white,\n        display: 'flex',\n        flexDirection: 'column',\n        height: '100%',\n        padding: theme.spacing(2)\n    },\n    divider: {\n        margin: theme.spacing(2, 0)\n    },\n    nav: {\n        marginBottom: theme.spacing(2)\n    }\n}));\n\nconst Sidebar = props => {\n    const { open, variant, onClose, className, ...rest } = props;\n    const classes = useStyles();\n\n    const adminPages = [\n        {\n            title: 'Student Registration',\n            href: '/AddStudent',\n            icon: <PeopleIcon />\n        },\n        {\n            title: 'View Student',\n            href: '/ViewStudent',\n            icon: <FitnessCenter />\n        }\n    ];\n    return (\n        <Drawer\n            anchor=\"left\"\n            classes={{ paper: classes.drawer }}\n            onClose={onClose}\n            open={open}\n            variant={variant}>\n            <div {...rest} className={clsx(classes.root, className)}>\n                <SidebarNav\n                    className={classes.nav}\n                    pages={adminPages}\n                />\n            </div>\n        </Drawer>\n    );\n};\n\nSidebar.propTypes = {\n    className: PropTypes.string,\n    onClose: PropTypes.func,\n    open: PropTypes.bool.isRequired,\n    variant: PropTypes.string.isRequired\n};\n\nexport default Sidebar;\n","import React from 'react';\nimport { AppBar, Toolbar } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/styles';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport './Topbar.scss';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    boxShadow: 'none'\n  },\n  flexGrow: {\n    flexGrow: 1\n  },\n  signOutButton: {\n    marginLeft: theme.spacing(1)\n  }\n}));\n\nconst Topbar = props => {\n  const { className, onSidebarOpen, children, ...rest } = props;\n\n  const classes = useStyles();\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  // console.log(children);\n\n  return (\n    <React.Fragment>\n      <AppBar\n        {...rest}\n        className={clsx(classes.root, className)}\n      >\n        <Toolbar>\n\n          <div className={classes.flexGrow} />\n          \n         \n        </Toolbar>\n      </AppBar>\n      \n    </React.Fragment>\n  );\n};\n\nTopbar.propTypes = {\n  className: PropTypes.string,\n  onSidebarOpen: PropTypes.func\n};\n\nexport default Topbar;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles, useTheme } from '@material-ui/styles';\nimport { useMediaQuery } from '@material-ui/core';\n\nimport { Sidebar, Topbar, Footer } from './components';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    paddingTop: 56,\n    height: '100%',\n    [theme.breakpoints.up('sm')]: {\n      paddingTop: 64\n    }\n  },\n  shiftContent: {\n    paddingLeft: 240\n  },\n  content: {\n    height: '100%'\n  }\n}));\n\nconst Main = props => {\n  const { children } = props;\n\n  const classes = useStyles();\n  const theme = useTheme();\n  const isDesktop = useMediaQuery(theme.breakpoints.up('lg'), {\n    defaultMatches: true\n  });\n\n  const [openSidebar, setOpenSidebar] = useState(false);\n\n  const handleSidebarOpen = () => {\n    setOpenSidebar(true);\n  };\n\n  const handleSidebarClose = () => {\n    setOpenSidebar(false);\n  };\n\n  const shouldOpenSidebar = isDesktop ? true : openSidebar;\n\n  return (\n    <div\n      className={clsx({\n        [classes.root]: true,\n        [classes.shiftContent]: isDesktop\n      })}>\n      <Topbar children={children.props} onSidebarOpen={handleSidebarOpen} />\n      <Sidebar\n        onClose={handleSidebarClose}\n        open={shouldOpenSidebar}\n        variant={isDesktop ? 'persistent' : 'temporary'}\n      />\n      <main className={classes.content}>\n        {children}\n        <Footer />\n      </main>\n    </div>\n  );\n};\n\nMain.propTypes = {\n  children: PropTypes.node\n};\n\nexport default Main;\n","import React, { Component } from 'react';\nimport { Route } from 'react-router-dom';\nvar countries = [\n    {\n        \"id\": \"1\",\n        \"sortname\": \"AF\",\n        \"name\": \"Afghanistan\",\n        \"text\": \"Afghanistan\",\n        \"timezone\": 29,\n        \"currency\": \"2\",\n        \"languageCode\": \"en\",\n        \"currency_format\": \"en\"\n    },\n    {\n        \"id\": \"2\",\n        \"sortname\": \"AL\",\n        \"name\": \"Albania\",\n        \"text\": \"Albania\",\n        \"timezone\": 6,\n        \"currency\": \"3\",\n        \"languageCode\": \"el\",\n        \"currency_format\": \"el\"\n    },\n    {\n        \"id\": \"3\",\n        \"sortname\": \"DZ\",\n        \"name\": \"Algeria\",\n        \"text\": \"Algeria\",\n        \"timezone\": 6,\n        \"currency\": \"32\",\n        \"languageCode\": \"en\",\n        \"currency_format\": \"en\"\n    },\n    {\n        \"id\": \"4\",\n        \"sortname\": \"AS\",\n        \"name\": \"American Samoa\",\n        \"text\": \"American Samoa\",\n        \"timezone\": 95,\n        \"currency\": \"1\",\n        \"languageCode\": \"en\",\n        \"currency_format\": \"en\"\n    }];\nvar studentList = [\n    {\n        studentId: 1,\n        images: [],\n        fName: 'Rajat',\n        lName: 'Srivastava',\n        fatherName: 'Kamal',\n        email: 'ak@gmail.com',\n        address: '41/2 Nehru Nagar',\n        mobile: '9126023200',\n        gender: 'Male',\n        dob: '1995-08-22',\n        countryId: '3',\n    }\n]\n\nexport const PrivateRoute = ({\n    layout: Layout,\n    component: Component,\n    ...rest\n}) => (\n        <Route\n            {...rest}\n            render={props =>\n                <Layout>\n                    <Component {...props} studentList={studentList} countries={countries} createUserSucess={(message, data) => {\n                        createUserSucess(message, data);\n                    }} />\n                </Layout>}\n        />\n    );\nexport const createUserSucess = (message, data) => {\n    studentList.push(data);\n}\n\n","import React from 'react';\nimport { makeStyles } from '@material-ui/styles';\nimport { Grid, Typography } from '@material-ui/core';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    padding: theme.spacing(4)\n  },\n  content: {\n    paddingTop: 150,\n    textAlign: 'center'\n  },\n  image: {\n    marginTop: 50,\n    display: 'inline-block',\n    maxWidth: '100%',\n    width: 560\n  }\n}));\n\nconst NotFound = () => {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <Grid\n        container\n        justify=\"center\"\n        spacing={4}\n      >\n        <Grid\n          item\n          lg={6}\n          xs={12}\n        >\n          <div className={classes.content}>\n            <Typography variant=\"h1\">\n              404: The page you are looking for isn’t here\n            </Typography>\n            <Typography variant=\"subtitle2\">\n              You either tried some shady route or you came here by mistake.\n              Whichever it is, try using the navigation\n            </Typography>\n            <img\n              alt=\"Under development\"\n              className={classes.image}\n              src=\"/images/undraw_page_not_found_su7k.svg\"\n            />\n          </div>\n        </Grid>\n      </Grid>\n    </div>\n  );\n};\n\nexport default NotFound;\n","\nexport const getIndexOfArrayData = (data, property, value) => {\n  let result = -1;\n  data.some(function(item, i) {\n    if (item[property] === value) {\n      result = i;\n      return true;\n    }\n    return '';\n  });\n  return result;\n};","import React from 'react';\n\nclass ErrorBoundary extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { error: null, errorInfo: null };\n  }\n\n  componentDidCatch(error, errorInfo) {\n    // Catch errors in any components below and re-render with error message\n    this.setState({\n      error: error,\n      errorInfo: errorInfo\n    });\n    // You can also log error messages to an error reporting service here\n  }\n\n  render() {\n    if (this.state.errorInfo) {\n      // Error path\n      return (\n        <div>\n          <h2>Something went wrong.</h2>\n          <details style={{ whiteSpace: 'pre-wrap' }}>\n            {this.state.error && this.state.error.toString()}\n            <br />\n            {this.state.errorInfo.componentStack}\n          </details>\n        </div>\n      );\n    }\n    // Normally, just render children\n    return this.props.children;\n  }\n}\n\nexport default ErrorBoundary;","export const validateEmail = email => {\n  var pattern = new RegExp(\n    /^(([^<>()\\\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/\n  );\n  return pattern.test(String(email).toLowerCase());\n};\n\nexport const validateContact = (c) => {\n  // ***** ContactNumber can't start with zero and between 7-15 digits and can't contains character or special symbols  \n  //let CONTACT_REGEXP = /^[+-]?[1-9]{1}[0-9]{7,14}$/;\n  c = c.replace(/^0+/, '');\n  let CONTACT_REGEXP = /^[0-9]{1}[0-9]{7,14}$/;\n  return CONTACT_REGEXP.test(c) ? true : false\n}","import React, { Component, Fragment } from 'react';\nimport { Button, FormControl, FormControlLabel, FormLabel, Grid, InputLabel, MenuItem, Radio, RadioGroup, Select, TextField } from '@material-ui/core';\nimport { withStyles } from '@material-ui/core/styles';\nimport { SnackBar } from '../../../../components';\nimport { validateContact, validateEmail } from '../../../../core/validator/Validator';\n\nconst useStyles = theme => ({\n    form: {\n        paddingLeft: 0,\n        paddingRight: 0,\n        paddingBottom: 0,\n        flexBasis: 700,\n        [theme.breakpoints.down('sm')]: {\n            paddingLeft: theme.spacing(2),\n            paddingRight: theme.spacing(2)\n        }\n    },\n    chip: {\n        margin: 2\n    },\n    chips: {\n        display: 'flex',\n        flexWrap: 'wrap'\n    },\n    formControl: {\n        marginTop: theme.spacing(2),\n        minWidth: 120,\n        width: '100%'\n    },\n    title: {\n        marginTop: theme.spacing(3),\n        textAlign: 'center',\n        marginBottom: 20\n    },\n    textField: {\n        marginTop: theme.spacing(2)\n    },\n    signInButton: {\n        margin: theme.spacing(2, 0)\n    }\n});\n\nconst ITEM_HEIGHT = 48;\nconst ITEM_PADDING_TOP = 8;\nconst MenuProps = {\n    PaperProps: {\n        style: {\n            maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\n            width: 250\n        }\n    }\n};\nconst countries = [\n    {\n        \"countryId\": \"1\",\n        \"sortname\": \"AF\",\n        \"name\": \"Afghanistan\",\n        \"text\": \"Afghanistan\",\n        \"timezone\": 29,\n        \"currency\": \"2\",\n        \"languageCode\": \"en\",\n        \"currency_format\": \"en\"\n    },\n    {\n        \"countryId\": \"2\",\n        \"sortname\": \"AL\",\n        \"name\": \"Albania\",\n        \"text\": \"Albania\",\n        \"timezone\": 6,\n        \"currency\": \"3\",\n        \"languageCode\": \"el\",\n        \"currency_format\": \"el\"\n    },\n    {\n        \"countryId\": \"3\",\n        \"sortname\": \"DZ\",\n        \"name\": \"Algeria\",\n        \"text\": \"Algeria\",\n        \"timezone\": 6,\n        \"currency\": \"32\",\n        \"languageCode\": \"en\",\n        \"currency_format\": \"en\"\n    },\n    {\n        \"countryId\": \"4\",\n        \"sortname\": \"AS\",\n        \"name\": \"American Samoa\",\n        \"text\": \"American Samoa\",\n        \"timezone\": 95,\n        \"currency\": \"1\",\n        \"languageCode\": \"en\",\n        \"currency_format\": \"en\"\n    }];\nclass AddEditUser extends Component {\n    constructor(props) {\n        super(props);\n        this.selectCountryDDRef = React.createRef();\n        this.state = {\n            email: '',\n            isEmail: true,\n            isPhoneNumberValid: true,\n            selectRoleLabelWidth: 0,\n            values: {\n                fName: '',\n                lName: '',\n                fatherName: '',\n                email: '',\n                address: '',\n                gender: '',\n                mobile: '',\n                isUpdateButton: false,\n                gender: '',\n                dob: new Date(),\n                studentId: '',\n                countryId: '1',\n                images: []\n            },\n            touched: {\n                // email: false,\n                password: false,\n                // phoneCountryCode: false,\n                mobile: false\n            },\n            errors: {\n                email: false,\n                // password: false,\n                fName: false,\n                lName: false,\n                // phoneCountryCode: false,\n                mobile: false\n            },\n            loading: false\n        };\n    }\n\n    componentDidMount = () => {\n        var { data } = this.props;\n        this.setState({\n            selectRoleLabelWidth: this.selectCountryDDRef.current.offsetWidth,\n        });\n        debugger\n        this.userUpdateInfo(data);\n    };\n    userUpdateInfo = data => {\n        this.setState({\n            values: data // If user come to edit user info. then his default info show in the field.\n                ? {\n                    fName: data.fName ? data.fName : '',\n                    lName: data.lName ? data.lName : '',\n                    fatherName: data.fatherName ? data.fatherName : '',\n                    email: data.email ? data.email : '',\n                    address: data.address ? data.address : '',\n                    mobile: data.mobile ? data.mobile : '',\n                    gender: data.gender ? data.gender : '',\n                    dob: data.dob ? data.dob : '',\n                    studentId: data.studentId,\n                    countryId: data.countryId ? data.countryId : '',\n                    images: []\n                }\n                : {\n                    // Else user come to  create user.\n                    fName: '',\n                    lName: '',\n                    fatherName: '',\n                    email: '',\n                    address: '',\n                    mobile: '',\n                    gender: 'Male',\n                    dob: '1995-08-22',\n                    // studentId: data.studentId,\n                    countryId: '1',\n                    images: []\n                }\n        });\n    };\n    updateUser = () => {\n        let data = this.state.values;\n        console.log(data);\n        debugger\n        let payload = {\n            fName: data.fName ? data.fName : '',\n            lName: data.lName ? data.lName : '',\n            fatherName: data.fatherName ? data.fatherName : '',\n            email: data.email ? data.email : '',\n            address: data.address ? data.address : '',\n            mobile: data.mobile ? data.mobile : '',\n            gender: data.gender ? data.gender : '',\n            dob: data.dob ? data.dob : '',\n            studentId: data.studentId,\n            countryId: data.countryId ? data.countryId : '',\n            images:data.images.length ? data.images : [],\n        };\n        this.props.updateSuccess('Update SuccessFully Done',payload);\n    };\n\n    handleChange = event => {\n        if (event.target.type === 'email') {\n            let isValid = validateEmail(event.target.value);\n            this.setState({ isEmail: isValid });\n        }\n        this.setState({\n            values: {\n                ...this.state.values,\n                [event.target.name]: event.target.value\n            },\n            touched: {\n                ...this.state.touched,\n                [event.target.name]: true\n            },\n            errors: {\n                ...this.state.errors,\n                [event.target.name]: event.target.value ? false : true\n            }\n        });\n    };\n\n    // ***** Mark Country Code Touch (If User Opens DropDown And Not Slecting A Value)\n    handlePhoneCountryCodeClick = event => {\n        this.setState({ hasError: false });\n        if (!this.state.values.phoneCountryCode) {\n            this.setState({\n                touched: {\n                    ...this.state.touched,\n                    phoneCountryCode: true\n                },\n                errors: {\n                    ...this.state.errors,\n                    phoneCountryCode: true\n                }\n            });\n        }\n    };\n\n    handlePhoneCountryCodeChange = event => {\n        this.setState({\n            values: {\n                ...this.state.values,\n                [event.target.name]: event.target.value\n            },\n            touched: {\n                ...this.state.touched,\n                [event.target.name]: true\n            },\n            errors: {\n                ...this.state.errors,\n                [event.target.name]: event.target.value ? false : true\n            }\n        });\n    };\n    handleChangeOnmobile = event => {\n        let isValid = validateContact(event.target.value);\n        this.setState({ isPhoneNumberValid: isValid });\n        this.setState({\n            values: {\n                ...this.state.values,\n                [event.target.name]: event.target.value\n            },\n            touched: {\n                ...this.state.touched,\n                [event.target.name]: true\n            },\n            errors: {\n                ...this.state.errors,\n                [event.target.name]: event.target.value ? false : true\n            }\n        });\n    };\n    createUser = event => {\n        event.preventDefault();\n        let data = this.state.values;\n        console.log(data);\n        debugger\n        let payload = {\n            fName: data.fName ? data.fName : '',\n            lName: data.lName ? data.lName : '',\n            fatherName: data.fatherName ? data.fatherName : '',\n            email: data.email ? data.email : '',\n            address: data.address ? data.address : '',\n            mobile: data.mobile ? data.mobile : '',\n            gender: data.gender ? data.gender : '',\n            dob: data.dob ? data.dob : '',\n            studentId: this.props.studentList.length+1,\n            countryId: data.countryId ? data.countryId : '',\n            images:data.images.length ? data.images : [],\n        };\n        this.setState({ alert: true, variant: 'success', message:'User Created SuccessFully Done' });\n        this.props.createUserSucess('User Created SuccessFully Done',payload);\n        // let selectedId = [];\n        // this.state.values.selectedCompanyList.map(data => {\n        //   selectedId.push(data.companyId);\n        // });\n        // let payload = {\n        //   email: this.state.values.email,\n        //   phoneNumber:\n        //     this.state.values.phoneCountryCode.dial_code +\n        //     this.state.values.mobile,\n        //   fName: this.state.values.fName,\n        //   lName: this.state.values.lName,\n        //   companyAllocatedTo: selectedId,\n        //   type: 4,\n        //   gender: this.state.values.gender\n        // };\n        // console.log(payload);\n        // post(url.addUser, payload)\n        //   .then(res => {\n        //     debugger;\n        //   })\n        //   .catch(err => {\n        //     debugger;\n        //   });\n    };\n\n    handleChangeMultiple = event => {\n        const { value, name } = event.target;\n        this.setState({\n            values: { ...this.state.values, [name]: value }\n        });\n    };\n    alertClose = () => {\n        // Sneack Bar close\n        this.setState({ alert: false, variant: '', message: '' });\n    };\n    onImageChange = (event) => {\n        if (event.target.files && event.target.files[0]) {\n            let reader = new FileReader();\n            reader.onload = (e) => {\n                let _images = this.state.values.images;\n                _images.push(e.target.result);\n                this.setState({ image: _images });\n            };\n            reader.readAsDataURL(event.target.files[0]);\n        }\n    }\n    onImageRemove = (index) => {\n        let _images = this.state.values.images;\n        // let _index = getIndexOfArrayData(\n        //     _companyTable.companyList,\n        //     '_id',\n        //     data.trainerId\n        //   );\n        _images.splice(index, 1);\n        this.setState({ image: _images });\n\n    }\n    // returnCountryName = (countryId) =>{\n    //     return this.countries[0].name;\n    // }\n    render() {\n        const { classes } = this.props;\n        return (\n            <Fragment>\n                <form\n                    className={classes.form}\n                    onSubmit={this.createUser}\n                    autoComplete=\"off\">\n                    <Grid container direction=\"row\" justify=\"center\" alignItems=\"center\">\n                        <Grid item md={12} xs={12}>\n                            <Grid container spacing={3}>\n                                <Grid item md={4} xs={12}>\n                                    <TextField\n                                        className={classes.textField}\n                                        error={this.state.errors['fName']}\n                                        helperText={\n                                            this.state.errors['fName']\n                                                ? 'First name is required '\n                                                : null\n                                        }\n                                        fullWidth\n                                        label=\"First Name\"\n                                        name=\"fName\"\n                                        onChange={this.handleChange}\n                                        type=\"text\"\n                                        value={this.state.values.fName || ''}\n                                        variant=\"outlined\"\n                                        required\n                                    />\n                                </Grid>\n                                <Grid item md={4} xs={12}>\n                                    <TextField\n                                        className={classes.textField}\n                                        error={this.state.errors['lName']}\n                                        fullWidth\n                                        helperText={\n                                            this.state.errors['lName']\n                                                ? 'last name is required'\n                                                : null\n                                        }\n                                        label=\"Last Name\"\n                                        name=\"lName\"\n                                        onChange={this.handleChange}\n                                        type=\"text\"\n                                        value={this.state.values.lName || ''}\n                                        variant=\"outlined\"\n                                        required\n                                    />\n                                </Grid>\n                                <Grid item md={4} xs={12}>\n                                    <TextField\n                                        className={classes.textField}\n                                        error={this.state.errors['email'] || !this.state.isEmail}\n                                        fullWidth\n                                        helperText={\n                                            this.state.errors['email']\n                                                ? 'Email is required'\n                                                : this.state.isEmail\n                                                    ? null\n                                                    : 'Invalid Email'\n                                        }\n                                        label=\"Email\"\n                                        name=\"email\"\n                                        onChange={this.handleChange}\n                                        type=\"email\"\n                                        value={this.state.values.email || ''}\n                                        variant=\"outlined\"\n                                        required\n                                    />\n                                </Grid>\n                                <Grid item md={4} xs={12}>\n                                    <TextField\n                                        className={classes.textField}\n                                        error={this.state.errors['fatherName']}\n                                        fullWidth\n                                        helperText={\n                                            this.state.errors['fatherName']\n                                                ? 'last name is required'\n                                                : null\n                                        }\n                                        label=\"Father Name\"\n                                        name=\"fatherName\"\n                                        onChange={this.handleChange}\n                                        type=\"text\"\n                                        value={this.state.values.fatherName || ''}\n                                        variant=\"outlined\"\n                                        required\n                                    />\n                                </Grid>\n                                <Grid item md={4} xs={12}>\n\n                                    <TextField\n                                        multiline={true}\n                                        rows={4}\n                                        className={classes.textField}\n                                        error={this.state.errors['address']}\n                                        fullWidth\n                                        helperText={\n                                            this.state.errors['address']\n                                                ? 'last name is required'\n                                                : null\n                                        }\n                                        label=\"Address\"\n                                        name=\"address\"\n                                        onChange={this.handleChange}\n                                        type=\"text\"\n                                        value={this.state.values.address || ''}\n                                        variant=\"outlined\"\n                                        required\n                                    />\n                                </Grid>\n                                <Grid item md={4} xs={12}>\n                                    <FormLabel component=\"legend\">Gender</FormLabel>\n                                    <RadioGroup label=\"Gender\" aria-label=\"gender\" name=\"gender\" value={this.state.values.gender || ''} onChange={this.handleChange}>\n                                        <FormControlLabel value=\"Female\" control={<Radio />} label=\"Female\" />\n                                        <FormControlLabel value=\"Male\" control={<Radio />} label=\"Male\" />\n                                    </RadioGroup>\n                                </Grid>\n                                <Grid item md={4} xs={12}>\n                                    <TextField\n                                        id=\"dob\"\n                                        className={classes.textField}\n                                        fullWidth\n                                        label=\"DOB\"\n                                        name=\"dob\"\n                                        type=\"date\"\n                                        onChange={this.handleChange}\n                                        // defaultValue=\"2017-05-24\"\n                                        InputLabelProps={{\n                                            shrink: true,\n                                        }}\n                                        value={this.state.values.dob || ''}\n                                        variant=\"outlined\"\n                                    />\n                                    {/* <TextField\n                                        className={classes.textField}\n                                        error={this.state.errors['address']}\n                                        fullWidth\n                                        helperText={\n                                            this.state.errors['address']\n                                                ? 'last name is required'\n                                                : null\n                                        }\n                                        label=\"Address\"\n                                        name=\"address\"\n                                        onChange={this.handleChange}\n                                        type=\"text\"\n                                        value={this.state.values.address || ''}\n                                        variant=\"outlined\"\n                                        required\n                                    /> */}\n                                </Grid>\n                                <Grid item md={6} xs={12}>\n                                    <FormControl\n                                        required\n                                        variant=\"outlined\"\n                                        className={classes.formControl}>\n                                        <InputLabel\n                                            ref={this.selectCountryDDRef}\n                                            htmlFor=\"outlined-role-simple\">\n                                            Country\n                                        </InputLabel>\n                                        <Select\n                                            value={this.state.values['countryId']}\n                                            onChange={this.handleChange}\n                                            labelWidth={this.state.selectRoleLabelWidth}\n                                            inputProps={{\n                                                name: 'countryId',\n                                                id: 'outlined-role-simple'\n                                            }}>\n                                            {\n                                                countries.map((c, index) => (\n                                                    <MenuItem key={index} value={c.countryId}>{c.name}</MenuItem>\n                                                ))\n                                            }\n                                        </Select>\n                                    </FormControl>\n                                </Grid>\n                                <Grid item md={6} xs={12}>\n                                    <TextField\n                                        required\n                                        className={classes.textField}\n                                        error={\n                                            this.state.errors['mobile'] ||\n                                            !this.state.isPhoneNumberValid\n                                        }\n                                        type=\"number\"\n                                        onChange={this.handleChangeOnmobile}\n                                        fullWidth\n                                        value={this.state.values.mobile}\n                                        helperText={\n                                            this.state.errors['mobile']\n                                                ? 'Phone number is required'\n                                                : this.state.isPhoneNumberValid\n                                                    ? null\n                                                    : 'Invalid Phone No.'\n                                        }\n                                        label=\"Phone Number\"\n                                        name=\"mobile\"\n                                        variant=\"outlined\"\n                                    />\n                                </Grid>\n                                <Grid item md={12} xs={12}>\n                                    {/* <Grid item md={12} xs={12}> */}\n                                    {/* <Avatar className={classes.orangeAvatar}>N</Avatar> */}\n                                    {this.state.values.images && this.state.values.images.length ?\n                                        // <div\n                                        //     style={{\n                                        //         marginLeft: 'auto',\n                                        //         marginRight: 'auto',\n                                        //         background: 'gray',\n                                        //         borderRadius: '5px'\n                                        //     }}\n                                        // className={classes.marginTop}>\n                                        this.state.values.images.map((img, index) => (\n                                            <Grid item md={3} xs={3} key={index}>\n                                                <img\n                                                    alt=\"displayCompanyLogo\"\n                                                    src={img}\n                                                    style={{\n                                                        height: '90px',\n                                                        width: '90px',\n                                                        borderRadius: '5px',\n                                                    }}\n                                                />\n                                                <Button\n                                                    className={classes.uploadButton}\n                                                    color=\"primary\"\n                                                    component=\"span\"\n                                                    variant=\"text\"\n                                                    onClick={(index) => this.onImageRemove(index)}\n                                                >\n                                                    Remove This Pic\n                                                </Button>\n                                            </Grid>\n                                        ))\n                                        // </div>\n                                        :\n                                        <div\n                                            style={{\n                                                height: '90px',\n                                                width: '90px',\n                                                marginLeft: 'auto',\n                                                marginRight: 'auto',\n                                                background: 'gray',\n                                                borderRadius: '5px'\n                                            }}\n                                            className={classes.marginTop}>\n                                        </div>\n                                    }\n                                    {/* </Grid> */}\n                                    {/* <Grid item md={12} xs={12}> */}\n                                    <div style={{ textAlign: 'center', marginTop: '2px' }}>\n                                        <input\n                                            accept=\"image/*\"\n                                            style={{ display: 'none' }}\n                                            id=\"text-button-file\"\n                                            type=\"file\"\n                                            onChange={this.onImageChange}\n                                        />\n                                        <label htmlFor=\"text-button-file\">\n                                            <Button\n                                                className={classes.uploadButton}\n                                                color=\"primary\"\n                                                component=\"span\"\n                                                variant=\"text\">\n                                                Upload new picture\n                                            </Button>\n                                        </label>\n                                    </div>\n                                    {/* </Grid> */}\n                                </Grid>\n                                <Grid item md={12} xs={12}>\n                                    <Button\n                                        className={classes.signInButton}\n                                        color=\"primary\"\n                                        onClick={ this.props.isEditUser ? this.updateUser : this.create}\n                                        disabled={\n                                            this.state.values['email'] &&\n                                                this.state.isEmail &&\n                                                this.state.values['fName'] &&\n                                                this.state.values['lName'] &&\n                                                this.state.values['fatherName'] &&\n                                                this.state.values['mobile'] &&\n                                                this.state.isPhoneNumberValid\n                                                ? false\n                                                : true\n                                        }\n                                        fullWidth\n                                        size=\"large\"\n                                        type=\"submit\"\n                                        variant=\"contained\">\n                                        {this.props && this.props.isEditUser ? 'Update info' : 'Create'}\n                                    </Button>\n                                </Grid>\n                            </Grid>\n                        </Grid>\n                    </Grid>\n                </form>\n                <SnackBar\n                    open={this.state.alert}\n                    variant={this.state.variant}\n                    message={this.state.message}\n                    alertClose={this.alertClose}\n                />\n            </Fragment>\n        );\n    }\n}\nexport default withStyles(useStyles)(AddEditUser);\n","import React, { Component, Fragment } from 'react';\n\nimport { Card, CardContent, Grid, IconButton, Table, TableBody, TableCell, TableHead, TableRow } from '@material-ui/core';\nimport { withStyles } from '@material-ui/core/styles';\nimport { Edit } from '@material-ui/icons';\nimport PropTypes from 'prop-types';\nimport PerfectScrollbar from 'react-perfect-scrollbar';\nimport { withRouter } from 'react-router-dom';\nimport { Dialog, SnackBar } from '../../../../components';\nimport { dateFormat } from '../../../../components/TimeFormet/TimeFormat';\nimport { getIndexOfArrayData } from '../../../../core/global/util';\nimport AddEditUser from '../AddEditUser';\nimport './UserTable.scss';\nconst countries = [\n    {\n        \"countryId\": \"1\",\n        \"sortname\": \"AF\",\n        \"name\": \"Afghanistan\",\n        \"text\": \"Afghanistan\",\n        \"timezone\": 29,\n        \"currency\": \"2\",\n        \"languageCode\": \"en\",\n        \"currency_format\": \"en\"\n    },\n    {\n        \"countryId\": \"2\",\n        \"sortname\": \"AL\",\n        \"name\": \"Albania\",\n        \"text\": \"Albania\",\n        \"timezone\": 6,\n        \"currency\": \"3\",\n        \"languageCode\": \"el\",\n        \"currency_format\": \"el\"\n    },\n    {\n        \"countryId\": \"3\",\n        \"sortname\": \"DZ\",\n        \"name\": \"Algeria\",\n        \"text\": \"Algeria\",\n        \"timezone\": 6,\n        \"currency\": \"32\",\n        \"languageCode\": \"en\",\n        \"currency_format\": \"en\"\n    },\n    {\n        \"countryId\": \"4\",\n        \"sortname\": \"AS\",\n        \"name\": \"American Samoa\",\n        \"text\": \"American Samoa\",\n        \"timezone\": 95,\n        \"currency\": \"1\",\n        \"languageCode\": \"en\",\n        \"currency_format\": \"en\"\n    }];\nconst useStyles = theme => ({\n    root: {},\n    content: {\n        padding: 0\n    },\n    inner: {\n        minWidth: 1050\n    },\n    nameContainer: {\n        display: 'flex',\n        alignItems: 'center'\n    },\n    avatar: {\n        marginRight: theme.spacing(2)\n    },\n    actions: {\n        justifyContent: 'flex-end'\n    },\n    button: {\n        margin: 0,\n        padding: theme.spacing(1)\n    },\n    actionButton: {\n        display: 'flex'\n    }\n});\nclass UsersTable extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            newRow: false,\n            forShow: [],\n            isDialogOpen: false,\n            dialogHeader: '',\n            dialogName: '',\n            isComponent: '',\n            data: {},\n            name: '',\n            companyList: [],\n            isData: '',\n            direction: true,\n            alert: false,\n            variant: '',\n            message: '',\n            activeSortName: 'firstName'\n        };\n    }\n    alertClose = () => {\n        this.setState({\n            alert: false,\n            variant: '',\n            messsage: ''\n        });\n    };\n    openDialog = (data, text, isData) => {\n        var filterData = [];\n        if (isData === 'companies') {\n            data.images.map(company => {\n                return filterData.push(company);\n            });\n        }\n        if (isData === 'trainings') {\n            data.typesOfTrainingsHeParticipated.map(training => {\n                return filterData.push(training.category);\n            });\n        }\n        this.setState({\n            dialogHeader: text,\n            isDialogOpen: true,\n            isData: isData,\n            data: isData === 'editUser' ? data : [],\n            forShow: isData !== 'editUser' ? filterData : []\n        });\n    };\n    handleCloseAddUserDialog = () => {\n        this.setState({\n            isDialogOpen: false,\n        });\n    };\n    updateSuccess = (message, userUpdatedData) => {\n        this.setState({ alert: true, variant: 'success', message });\n        this.props.userUpdateSuccess(userUpdatedData);\n        this.handleCloseAddUserDialog();\n    };\n    returnCountry = (countryId) => {\n        let _index = getIndexOfArrayData(countries, 'countryId', countryId);\n        if (-1 != _index) {\n            return countries[_index]['name'];\n        }\n    }\n\n    dialogBody = () => {\n        return this.state.isData === 'editUser' ? (\n            <Fragment>\n                <AddEditUser\n                    updateSuccess={(message, userUpdatedData) => this.updateSuccess(message, userUpdatedData)}\n                    data={this.state.data}\n                    isEditUser={true}\n                />\n            </Fragment>\n        ) : (\n                <div>\n                    <Grid item md={12} xs={12}>\n                        {this.state.forShow.map((c, i) => (\n                            <Grid key={i + 1} item md={4} xs={4} container justify=\"center\">\n                                <img style={{ width: '100%' }} src={c} />\n                            </Grid>\n                        ))}\n                    </Grid>\n                </div>\n            );\n    };\n\n    render() {\n        const { users, classes, count, page, pagination } = this.props;\n        return (\n            <Fragment>\n                <Card className={classes.root}>\n                    <CardContent className={classes.content}>\n                        <PerfectScrollbar>\n                            <div className={classes.inner}>\n                                <Table>\n                                    <TableHead>\n                                        <TableRow>\n                                            <TableCell className=\"tableCell \">\n                                                Student Image(s)\n                                            </TableCell>\n                                            <TableCell className=\"tableCell \">\n                                                Student Name\n                                            </TableCell>\n                                            <TableCell className=\"tableCell \">\n                                                Father Name\n                                            </TableCell>\n                                            <TableCell>\n                                                Email\n                                            </TableCell>\n                                            <TableCell>\n                                                Address\n                                            </TableCell>\n                                            <TableCell>\n                                                Mobile\n                                            </TableCell>\n                                            <TableCell>\n                                                Gender\n                                            </TableCell>\n                                            <TableCell>\n                                                DOB\n                                            </TableCell>\n                                            <TableCell>\n                                                Country\n                                            </TableCell>\n                                            <TableCell className=\"fixedColumn-right fixedColumnBackgroundTh\">\n                                                Actions\n                                            </TableCell>\n                                        </TableRow>\n                                    </TableHead>\n                                    <TableBody>\n                                        {users.length !== 0 &&\n                                            users.map((user, index) => (\n                                                <TableRow key={index} className={classes.tableRow}>\n                                                    {user.images &&\n                                                        user.images.length ? (\n                                                            <TableCell\n                                                                className=\"tableCell cursorpointer getHoverEffectContainer\"\n                                                                onClick={() =>\n                                                                    this.openDialog(\n                                                                        user,\n                                                                        user.fName +\n                                                                        ' ' +\n                                                                        user.lName +\n                                                                        ' Image(s)',\n                                                                        'companies'\n                                                                    )\n                                                                }>\n                                                                <div>\n                                                                    <span>\n                                                                        Click To See Image(s)\n                                                                    </span>\n                                                                </div>\n                                                            </TableCell>\n                                                        ) : (\n                                                            <TableCell className=\"tableCell \">\n                                                                No Images\n                                                            </TableCell>\n                                                        )}\n                                                    <TableCell className=\"tableCell\">\n                                                        <div className={classes.nameContainer}>\n                                                            {user.fName + ' ' + user.lName}\n                                                        </div>\n                                                    </TableCell>\n                                                    <TableCell className=\"tableCell\">\n                                                        <div className={classes.nameContainer}>\n                                                            {user.fatherName}\n                                                        </div>\n                                                    </TableCell>\n                                                    <TableCell>{user.email}</TableCell>\n                                                    <TableCell>{user.address}</TableCell>\n                                                    <TableCell className=\"tableCell\">\n                                                        {user.mobile}\n                                                    </TableCell>\n                                                    <TableCell>{user.gender}</TableCell>\n                                                    <TableCell>{dateFormat(user.dob)}</TableCell>\n                                                    <TableCell>{this.returnCountry(user.countryId)}</TableCell>\n\n                                                    <TableCell className=\"fixedColumn-right fixedColumnBackgroundTd\">\n                                                        <IconButton\n                                                            onClick={() =>\n                                                                this.openDialog(user, 'Edit User', 'editUser')\n                                                            }\n                                                            className={classes.button}>\n                                                            <Edit style={{ color: 'green' }} />\n                                                        </IconButton>\n                                                    </TableCell>\n                                                </TableRow>\n                                            ))}\n                                    </TableBody>\n                                </Table>\n                            </div>\n                        </PerfectScrollbar>\n                    </CardContent>\n                </Card>\n                <Dialog\n                    open={this.state.isDialogOpen}\n                    handleClose={() => {\n                        this.handleCloseAddUserDialog();\n                    }}\n                    maxWidth={this.state.dialogHeader === 'Edit User' ? 'md' : 'md'}\n                    dialogHeaderText={this.state.dialogHeader}\n                    dialogBody={this.dialogBody()}\n                    dialogFooter={null}\n                />\n                <SnackBar\n                    open={this.state.alert}\n                    variant={this.state.variant}\n                    message={this.state.message}\n                    alertClose={this.alertClose}\n                />\n            </Fragment>\n        );\n    }\n}\nUsersTable.propTypes = {\n    history: PropTypes.object\n};\nexport default withRouter(withStyles(useStyles)(UsersTable));\n","import moment from 'moment';\n\nexport const dateFormat = date => {\n  return moment(date).format('DD / MM / YYYY');\n};\n\nexport const timeFormat = date => {\n  return moment(date).format('HH:MM');\n};\n","import React, { Component } from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport { withRouter } from 'react-router-dom';\nimport { getIndexOfArrayData } from '../../core/global/util';\nimport ErrorBoundary from '../../core/handel-error/ErrorBoundary';\nimport './User.scss';\nimport { UsersTable } from './components';\n\nconst useStyles = theme => ({\n    root: {\n        padding: theme.spacing(3)\n    },\n    content: {\n        marginTop: theme.spacing(2)\n    }\n});\n// ***** User Crud Main Layout\nclass UserLayout extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            userList: [],\n        };\n    }\n    componentDidMount = () => {\n        this.setState({\n            userList: this.props.studentList,\n            count: this.props.studentList.length\n        });\n    };\n    updateSuccess = (userUpdatedData) => {\n        let _userList = this.state.userList;\n        let _index = getIndexOfArrayData(_userList, 'studentId', userUpdatedData.studentId);\n        if (_index != -1) {\n            _userList[_index] = userUpdatedData;\n        }\n        this.setState({ userList: _userList })\n    };\n    render() {\n        const { classes } = this.props;\n        return (\n            <ErrorBoundary>\n                <div className={classes.root}>\n                    <div className={classes.content}>\n                        <UsersTable\n                            userUpdateSuccess={(userUpdatedData) => this.updateSuccess(userUpdatedData)}\n                            users={this.state.userList}\n                            count={this.state.count}\n                        />\n                    </div>\n                </div>\n            </ErrorBoundary>\n        );\n    }\n}\nUserLayout.propTypes = {\n    history: PropTypes.object\n};\nexport default withRouter(withStyles(useStyles)(UserLayout));\n","import React from 'react';\nimport { Switch, Redirect } from 'react-router-dom';\nimport { RouteWithLayout } from './components';\nimport { Main as MainLayout } from './layouts';\nimport { PrivateRoute } from './privateRouter/PrivateRoute';\nimport {\n  User as UserView,\n  NotFound as NotFoundView,\n  AddEditUser,\n} from './views';\n\nconst Routes = () => {\n  return (\n    <Switch>\n      <Redirect exact from=\"/\" to=\"/AddStudent\" />\n      <PrivateRoute\n        component={AddEditUser}\n        exact\n        layout={MainLayout}\n        path=\"/AddStudent\"\n      />\n      <PrivateRoute\n        component={UserView}\n        exact\n        layout={MainLayout}\n        path=\"/ViewStudent\"\n        \n      />\n      <RouteWithLayout\n        component={NotFoundView}\n        exact\n        layout={MainLayout}\n        path=\"/not-found\"\n      />\n      <Redirect to=\"/not-found\" />\n    </Switch>\n  );\n};\n\nexport default Routes;\n","import React, { Component } from 'react';\nimport { Router } from 'react-router-dom';\nimport { createBrowserHistory } from 'history';\nimport { ThemeProvider } from '@material-ui/styles';\nimport theme from './theme';\nimport 'react-perfect-scrollbar/dist/css/styles.css';\nimport './assets/scss/index.scss';\nimport Routes from './Routes';\n\nconst browserHistory = createBrowserHistory();\n\n// Chart.helpers.extend(Chart.elements.Rectangle.prototype, {\n//   draw: chartjs.draw\n// });\n\n// validate.validators = {\n//   ...validate.validators,\n//   ...validators\n// };\n\nexport default class App extends Component {\n  render() {\n    return (\n      <ThemeProvider theme={theme}>\n        <Router history={browserHistory}>\n          <Routes />\n        </Router>\n      </ThemeProvider>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport * as serviceWorker from './serviceWorker';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}